.\" Manpage for _printf.
.TH _printf 1 "15 March 2020" "1.0" "_printf man page"
.SH NAME
_printf
.SH SYNOPSIS
#include "holberton.h"

#include <stdio.h>

#include <stdarg.h>

.SS Function prototype:

	 _printf(CONST CHAR *FORMAT, ...);
.SH DESCRIPTION
_printf produces output according to a specified format and writes output to std
out, the standard output stream.
.SS Return value
Upon successful return, _printf returns the number of characters printed (exclud
ing the null byte used to end output to strings).
.SS Format of the format string
The format string is a character string, beginning and ending in its initial shi
ft state, if any. The format string is composed of zero or more directives: ordi
nary characters (not %), which are copied unchanged to the output stream; and co
nversion specifications, each of which results in fetching zero or more subseque
nt arguments. Each conversion specification is introducted by the character %, a
nd ends with a conversion specifier.
.SS The conversion specifiers
    The character % is followed by the following specifiers:

.SS %:
    A '%' is written. No argument is converted.

.SS c:
    The int argument is converted to an unsigned char, and
    the resulting character is written.

.SS s:
    The const char * argument is expected to be a pointer to an
    array of character type (pointer to a string). Characters from
    the array are written up to (but not including) a terminating
    null byte ('\0').

.SS d/i:
    The int argument is converted to signed decimal notation.

.SS b:
    The int argument is converted to binary.

.SS r:
    Reverses a string argument and writes to stdout.

.SH EXAMPLE
.B To print a char:
   _printf
("%c", T) - prints the character T to stdout.

.B To print a string:
   _printf("%s", t) - prints a string stored in the variable t.
.SH SEE ALSO
printf, scanf
.SH BUGS
No known bugs.
.SH AUTHORS
Ian Culp & Tahlia Roper
